#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>


using namespace std;
typedef long long ll;
const int maxn=2e2+9;
const ll inf=2e16+9;
const ll mod=1e9+7;
double eps=1e-6;
double pi=acos(-1.0);

ll a[maxn][maxn];

int main()
{
	int n,m,x,y;
	ll tt;
	while(~scanf("%d %d %lld %d %d",&n,&m,&tt,&x,&y))
	{
		memset(a,0,sizeof(a));
		ll ans=0,maxx=-1,minn=inf;
		if(n==1)
		{
			ans=tt/m;
			tt%=m;
			for(int i=1;i<=tt;i++)
				a[1][i]++;
			for(int i=1;i<=m;i++)
			{
				maxx=max(maxx,a[1][i]);
				minn=min(minn,a[1][i]);
			}
			printf("%lld %lld %lld\n",ans+maxx,ans+minn,ans+a[x][y]);
			continue;
		}
		if(n==2)
		{
			ans=tt/(n*m);
			tt%=(n*m);
			for(int i=1;i<=n;i++)
			{
				if(tt==0) break;
				for(int j=1;j<=m;j++)
				{
					if(tt==0) break;
					a[i][j]++;
					tt--;
				}
			}
			for(int i=1;i<=n;i++)
				for(int j=1;j<=m;j++)
				{
					maxx=max(maxx,a[i][j]);
					minn=min(minn,a[i][j]);
				}
			printf("%lld %lld %lld\n",ans+maxx,ans+minn,ans+a[x][y]);
			continue;
		}
		ans=tt/(1LL*n*m+1LL*(n-2)*m);
		tt%=(1LL*n*m+1LL*(n-2)*m);
		for(int i=2;i<=n-1;i++)
		{
			for(int j=1;j<=m;j++)
				a[i][j]=ans*2;
		}
		for(int j=1;j<=m;j++)
			a[1][j]=a[n][j]=ans;

		for(int i=1;i<=n;i++)
		{
			if(tt==0) break;
			for(int j=1;j<=m;j++)
			{
				if(tt==0) break;
				a[i][j]++;
				tt--;
			}
		}
		if(tt>0)
		{
			for(int i=n-1;i>=2;i--)
			{
				if(tt==0) break;
				for(int j=1;j<=m;j++)
				{
					if(tt==0) break;
					a[i][j]++;
					tt--;
				}
			}
		}
		for(int i=1;i<=n;i++)
		{
			for(int j=1;j<=m;j++)
			{
				maxx=max(maxx,a[i][j]);
				minn=min(minn,a[i][j]);
			}
		}
		printf("%lld %lld %lld\n",maxx,minn,a[x][y]);
	}
	return 0;
}
